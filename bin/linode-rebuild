#!/bin/bash

source "$(dirname "${BASH_SOURCE[0]}")/utilities.sh"

if [ "$1" == "" ]; then
  echo "ERROR! You must provide the name of a linode you wish to rebuild"
  exit 1
fi

PATTERN=$1

STACKSCRIPT_NAME="`deploy_parameters | jq -r .stackscript`"
if [ -z ${STACKSCRIPT_NAME+x} ]; then
  echo "ERROR! STACKSCRIPT_NAME not provided with deploy parameters"
  exit 1
fi

IMAGE_LABEL="`deploy_parameters | jq -r .image`"
if [ -z ${IMAGE_LABEL+x} ]; then
  cat <<EOF
ERROR! IMAGE_LABEL not provided with deploy parameters

Available values for this are:
$(image_list)
EOF
  exit 1
fi

DEPLOYED_AT=`date --iso-8601=seconds`
IMAGE_ID=`image_id_from_label $IMAGE_LABEL`
LABEL="`config_json | jq -r .server_hostname`"
IP_ADDRESS="`ip_address_from_label $LABEL`"

STACKSCRIPT_ID=`stackscript_id_from_name $STACKSCRIPT_NAME`

ROOT_PASSWORD=`generate_password`
USER_PASSWORD=`generate_password`

set_password $USER_PASSWORD
JSON_MIN=`config_json_min`

cat <<EOF
Running $STACKSCRIPT_NAME (id: $STACKSCRIPT_ID) on $LABEL ($IP_ADDRESS)

UDF settings:
$(config_json)

Parameters:
  --image "$IMAGE_ID"
  --root_pass "$ROOT_PASSWORD"
  --stackscript_id "$STACKSCRIPT_ID"
  --stackscript_data $JSON_MIN

EOF

set_result_json root_password $ROOT_PASSWORD
set_result_json user_password $USER_PASSWORD
set_result_json deployed_at $DEPLOYED_AT
set_result_json image_id $IMAGE_ID
set_result_json stackscript $STACKSCRIPT_NAME
set_result_json stackscript_id $STACKSCRIPT_ID
set_result_json ip_address $IP_ADDRESS
set_result_json_bare stackscript_data `config_json_min`
# result_json

if [ -z ${DRY_RUN+x} ]; then
  LINODE_ID=`linode_id_from_label $LABEL`
  $LINODE_BIN linodes rebuild $LINODE_ID \
    --image "$IMAGE_ID"                  \
    --stackscript_id $STACKSCRIPT_ID     \
    --stackscript_data $JSON_MIN         \
    --root_pass $ROOT_PASSWORD

  ssh-keygen -R "$IP_ADDRESS"
fi

if [ ! -z ${DRY_RUN+x} ]; then
  cat <<EOF
Summary:

$(result_json)
EOF
else
  if [ -d "$SUMMARY_PATH" ]; then
    RESULT_FILE=$SUMMARY_PATH/$LABEL.json
    result_json | jq . > $RESULT_FILE

    cat <<EOF
Deploy parameters (including passwords) written to $RESULT_FILE

------------------------------
Root password: $ROOT_PASSWORD
User password: $USER_PASSWORD
------------------------------

EOF
  else
    cat <<EOF
Summary file not written because path not found ($SUMMARY_PATH)

Summary:

$(result_json)
EOF
  fi

  cat <<EOF
Once the rebuild is complete, you can login like so:

ssh `config_json | $JQ_BIN -r .username`@$IP_ADDRESS

EOF
fi
